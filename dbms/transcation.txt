 âœ… What is a transaction in DBMS? What are the properties of a transaction?

A transaction is a sequence of one or more operations executed as a single unit of work.

Properties of a transaction (ACID Properties):

1> Atomicity: All operations within the transaction are completed successfully, or none are applied (i.e., the transaction is atomic).

2> Consistency: The transaction brings the database from one valid state to another valid state.

3> Isolation: The operations of one transaction are isolated from others; intermediate results are not visible to other transactions.

4> Durability: Once a transaction is committed, its effects are permanent, even in the event of a system crash.

 âœ… What is the difference between UNION and UNION ALL in SQL?

 UNION: Combines the result of two queries and removes duplicate rows.
 UNION ALL: Combines the result of two queries but does not remove duplicates

 âœ… Explain the concept of indexing in DBMS.

  Indexing is a technique used to speed up the retrieval of records from a table by creating a data structure that allows for faster searching.

âœ…What is a deadlock in DBMS? How can it be prevented?

 A deadlock is a situation when two or more transactions are blocked because each transaction is waiting for the other to release resources. This results in a situation where none of the transactions can proceed.

  Mutual Exclusion â€“ Resources are held in a non-shareable mode.

  Hold and Wait â€“ A transaction is holding at least one resource and waiting for others.

  No Preemption â€“ Resources cannot be forcibly taken.

  Circular Wait â€“ A closed chain of transactions exists where each is waiting for a resource held by the next.

 ðŸ”¹ Deadlock Prevention Techniques:

     Preemption:
    Resources can be forcefully taken from some transactions and assigned to others to break deadlock.

    Resource Ordering:
    Impose a global order of resource acquisition. Transactions must request resources in a predefined order, preventing circular Wait

    Timeouts: 
    Automatically rolling back transactions that have been waiting too long for resources.

    âœ… What are the different types of database locks?
    Database locks include shared, exclusive, intent, update, row-level, and table-level locks, all used to manage concurrency, maintain consistency, and ensure safe transaction execution.


    âœ… What is the difference between a clustered and non-clustered index?

    A clustered index sorts and stores the actual table data by key values, while a non-clustered index maintains a separate structure with pointers to the data.

    ðŸ”¹ Clustered is faster for sorting and range queries.
    ðŸ”¹ Non-clustered is better for filtering and point lookups.
    ðŸ”¹ Only one clustered index per table, but multiple non-clustered indexes are allowed.

    âœ… What is the importance of the COMMIT and ROLLBACK operations in DBMS?

    ðŸ”¸ COMMIT ensures that successful transactions are permanently saved.
    ðŸ”¸ ROLLBACK ensures that in case of an error, the database is restored to its original state, preventing partial updates and data corruption.
    ðŸ”¸ Together, they help enforce the Atomicity and Durability property of ACID in DBMS.


    âœ… What is the difference between a superkey and a candidate key?
    A superkey uniquely identifies a record and may include extra attributes.
    A candidate key is the minimal version of a superkey, and one candidate key is selected as the primary key.

    âœ… What is the difference between a Primary Key and a Unique Key?

    ðŸ”¹ Primary Key:

     Uniquely identifies each record in a table.
    Cannot contain NULL values.
    Only one primary key allowed per table.
    Automatically creates a clustered index (in many DBMSs).

    ðŸ”¹ Unique Key:

        Ensures that all values in a column (or combination) are unique.
        Can contain one NULL value (depends on DBMS).
        A table can have multiple unique keys.
        Creates a non-clustered index by default.


    âœ… Q What is Referential Integrity in DBMS?
    ðŸ”¹ Definition:
     Referential Integrity is a property in DBMS that ensures consistency between related tables by maintaining valid references (foreign keys).

     It guarantees that a foreign key value in a child table always refers to an existing, valid primary key value in the parent table.

    âœ… What is the purpose of the GROUP BY clause in SQL?
     The GROUP BY clause in SQL is used to group rows that have the same values in specified columns and perform aggregate functions like SUM(), COUNT(), AVG(), MAX(), MIN() on each group.


    âœ… Explain the concept of Data Partitioning in DBMS
     ðŸ”¹ Definition:
      Data Partitioning is the process of dividing a large database table into smaller, more manageable pieces called partitions. Each partition can be stored and accessed separately, improving performance and manageability.

    ðŸ”¹ Types of Partitioning:
        Horizontal Partitioning (Sharding):
        Divides the table by rows. Each partition holds a subset of rows.
        Example: Customers in different regions stored in separate partitions.

        Vertical Partitioning:
        Divides the table by columns. Each partition holds a subset of columns.
        Example: Separating frequently accessed columns from rarely used ones.

        Range Partitioning:
        Partitions based on ranges of a column value.
        Example: Orders partitioned by order date ranges.

        Hash Partitioning:
        Uses a hash function on a column value to assign rows to partitions randomly but evenly.